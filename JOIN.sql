-- JOIN
-- 여러 테이블을 하나의 테이블처럼 사용
--SELECT 컬럼1, ....
--FROM 테이블1, ......
--WHERE 조건식
--GROUP BY 그룹식
--HAVING 그룹 조건식
--ORDER BY 정렬식

DESC EMP;  -- 14 ROW
DESC DEPT;  -- 4 ROW
SELECT * FROM DEPT;

SELECT *
FROM EMP, DEPT;  -- 56 ROW = 14 * 4
-- 데카르트 곱 : 모든 원소의 순서쌍을 곱한 것
-- CROSS JOIN 
-- 조인 조건이 없을 때

SELECT *
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
ORDER BY EMPNO;

-- 테이블 별칭 주기
SELECT *
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY EMPNO;

-- 등가 조인 EQUAL JOIN, 내부 조인 INNER JOIN, 단순 조인 SIMPLE JOIN
SELECT EMPNO, ENAME, DEPTNO, DNAME, LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;
-- 양 쪽 모두에 있는 컬럼명을 테이블명 없이 지정할 경우 : 열의 정의가 애매합니다.
SELECT EMPNO, ENAME, D.DEPTNO, DNAME, LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;
-- 컬럼명이 겹치는 경우, 테이블명을 명시적으로 지정해줘야 함.
-- 실무에서는 번거롭더라도, 테이블명 모두 기재합니다.
SELECT E.EMPNO, E.ENAME, D.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

SELECT E.EMPNO, E.ENAME, D.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
    AND SAL >= 3000;     -- 조건식을 사용하고 싶은 경우 AND

-- Q. INNER JOIN 했을때 급여가 2500 이하, 사원번호가 9999이하인 사원의 정보를 출력해보세요.
SELECT E.EMPNO, E.ENAME, E.SAL, D.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
    AND E.SAL <= 2500
    AND E.EMPNO <= 9999;

-- NON-EQUAL JOIN
-- 조건이 같은 조건이 아닌 경우
SELECT * FROM SALGRADE;

SELECT *
FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;
-- 급여 범위를 지정하는 조건식으로 NON-EQUAL JOIN

-- 자체 조인 SELF JOIN
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO;

-- 외부 조인 OUTER JOIN
-- 왼쪽 외부 조인 LEFT OUTER JOIN
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO(+)
ORDER BY E1.EMPNO;

-- 오른쪽 외부 조인 RIGHT OUTER JOIN
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR(+) = E2.EMPNO
ORDER BY E1.EMPNO;

-- ISO 표준 / ANSI 표준 문법
-- NATURAL JOIN
-- EQUAL JOIN을 대신해서 사용할 수 있다. WHERE절 필요 없음.
SELECT *
FROM EMP E NATURAL JOIN DEPT D;

-- JOIN ~ USING
SELECT *
FROM EMP E JOIN DEPT D USING(DEPTNO);

-- JOIN ~ ON
SELECT *
FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO);

-- OUTER JOIN (LEFT)
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM EMP E1 LEFT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;

-- OUTER JOIN (RIGHT)
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM EMP E1 RIGHT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;

-- OUTER JOIN (FULL)
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM EMP E1 FULL OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;
